(()=>{var b=Object.create;var R=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,O=Object.prototype.hasOwnProperty;var g=(o=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(o,{get:(t,n)=>(typeof require<"u"?require:t)[n]}):o)(function(o){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+o+'" is not supported')});var A=(o,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let p of M(t))!O.call(o,p)&&p!==n&&R(o,p,{get:()=>t[p],enumerable:!(s=L(t,p))||s.enumerable});return o};var f=(o,t,n)=>(n=o!=null?b(h(o)):{},A(t||!o||!o.__esModule?R(n,"default",{value:o,enumerable:!0}):n,o));var c=g("https://deno.land/x/importmap/mod.ts"),v=f(g("https://deno.land/x/slash/mod.ts")),w=f(g("https://deno.land/std/path/mod.ts")),d=f(g("https://deno.land/x/alog@0.1.1/mod.ts")),r="plugin-web";function y(o={}){let t=o.logLevel==="debug"?new d.default("ESBUILD-WEB",d.default.LevelDebug):new d.default("ESBUILD-WEB"),n=w.toFileUrl((0,v.default)(Deno.cwd()+"/"));t.debug("base:",n);let s;if(typeof o.importMap=="string"){let a=Deno.readTextFileSync(o.importMap),{imports:u,scopes:e}=JSON.parse(a);s=(0,c.resolveImportMap)({imports:u,scopes:e},new URL(Deno.cwd()))}else typeof o.importMap=="object"&&(s=(0,c.resolveImportMap)({imports:o.importMap.imports,scopes:o.importMap.scopes},n));t.debug("importMap:",s);let p=new Map;return{name:r,setup(a){t.info("Starting build...");let u=performance.now();a.onEnd(()=>{t.info(`Build finished in ${(performance.now()-u).toFixed(2)}ms`)}),a.onResolve({filter:/^npm:/},({path:e})=>(t.debug("npm:",e),{path:`https://esm.sh/${e.replace("npm:","")}`,namespace:r})),s&&a.onResolve({filter:/.*/},({path:e,importer:i})=>{try{let m=i.startsWith("http")?new URL(i):n,l=(0,c.resolveModuleSpecifier)(e,s,m);return t.debug("import map used:",l),{path:l,namespace:r}}catch{}}),a.onResolve({filter:/^https:\/\//},({path:e})=>({path:e,namespace:r})),a.onResolve({filter:/^http:\/\//},({path:e})=>({path:e,namespace:r})),a.onResolve({filter:/.*/,namespace:r},({path:e,importer:i,namespace:m})=>{if(m!==r||e[0]!=="/"&&e[0]!=="."){if(s){let l=(0,c.resolveModuleSpecifier)(e,s,new URL(Deno.cwd()));if(l)return t.debug("import map used:",l),{path:l,namespace:r}}return}return t.debug("path:",e),{path:new URL(e,i).toString(),namespace:r}}),a.onLoad({filter:/.*/,namespace:r},async({path:e})=>{if(p.has(e))return t.debug("cache hit:",e),{contents:p.get(e)};t.debug("fetching:",e);let i=await fetch(e);t.debug("fetched:",e);let m=await i.text();return p.set(e,m),t.debug("cached:",e),t.info("loaded",e),{contents:m,loader:"ts"}})}}}})();
